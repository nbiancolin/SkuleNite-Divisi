version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: backend.prod.Dockerfile
    command: /app/entrypoint.sh
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.production
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    expose:
      - "8000"
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
      dockerfile: backend.prod.Dockerfile
    command: celery -A backend worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.production
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
      - db

  frontend:
    build:
      context: .
      dockerfile: frontend.prod.Dockerfile
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/app/static
      - media_data:/app/media
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:7

volumes:
  postgres_data:
  static_data:
  media_data:
